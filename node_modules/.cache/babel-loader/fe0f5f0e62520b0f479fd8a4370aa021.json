{"ast":null,"code":"import _slicedToArray from \"/home/hab14/Nuva CArpeta/proyecto1/restaurant-proyect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab14/Nuva CArpeta/proyecto1/restaurant-proyect/src/shared/context/auth-context.js\";\nimport React, { useState, useContext } from \"react\";\nimport { login, register } from \"../../http\";\nimport { useHistory } from \"react-router-dom\"; // 1) Creamos el contexto\n\nconst AuthContext = React.createContext(); // 2) Creamos el custom Provider\n\nexport function AuthProvider({\n  children\n}) {\n  // 2.1) Creamos Estados\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAuthenticated = _useState2[0],\n        setIsAuthenticated = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const history = useHistory(); // 2.2) Definiremos los métodos para modificar el estado\n  // Login => Cambiaré a true\n\n  const signIn = async ({\n    email,\n    password\n  }) => {\n    try {\n      const _ref = await login(email, password),\n            _ref$data = _ref.data,\n            accessToken = _ref$data.accessToken,\n            user = _ref$data.user;\n\n      setUser(user);\n      setIsAuthenticated(true);\n      history.push(\"/\");\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }; // Register => Cambiaré a true\n\n\n  const signUp = async ({\n    name,\n    email,\n    password,\n    phone\n  }) => {\n    try {\n      const _ref2 = await register({\n        name,\n        email,\n        password,\n        phone\n      }),\n            _ref2$data = _ref2.data,\n            accessToken = _ref2$data.accessToken,\n            user = _ref2$data.user;\n\n      setUser(user);\n      setIsAuthenticated(true);\n\n      if (accessToken) {\n        history.push(\"/\");\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }; // Logout => Cambiaré a false\n  // 2.3) Devolvemos el Context\n\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      signIn,\n      user,\n      signUp\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, children);\n} // 3) Crear el custom hook\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  return context;\n}","map":{"version":3,"sources":["/home/hab14/Nuva CArpeta/proyecto1/restaurant-proyect/src/shared/context/auth-context.js"],"names":["React","useState","useContext","login","register","useHistory","AuthContext","createContext","AuthProvider","children","isAuthenticated","setIsAuthenticated","user","setUser","history","signIn","email","password","data","accessToken","push","error","Promise","reject","signUp","name","phone","useAuth","context"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,YAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;AACA,MAAMC,WAAW,GAAGN,KAAK,CAACO,aAAN,EAApB,C,CAEA;;AACA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACvC;AADuC,oBAEOR,QAAQ,CAAC,IAAD,CAFf;AAAA;AAAA,QAEhCS,eAFgC;AAAA,QAEfC,kBAFe;;AAAA,qBAGfV,QAAQ,CAAC,IAAD,CAHO;AAAA;AAAA,QAGhCW,IAHgC;AAAA,QAG1BC,OAH0B;;AAIvC,QAAMC,OAAO,GAAGT,UAAU,EAA1B,CAJuC,CAMvC;AACA;;AACA,QAAMU,MAAM,GAAG,OAAO;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAA+B;AAC1C,QAAI;AAAA,mBAGI,MAAMd,KAAK,CAACa,KAAD,EAAQC,QAAR,CAHf;AAAA,6BAEIC,IAFJ;AAAA,YAEYC,WAFZ,aAEYA,WAFZ;AAAA,YAEyBP,IAFzB,aAEyBA,IAFzB;;AAIAC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAG,MAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACH,KAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH;AACJ,GAXD,CARuC,CAqBvC;;;AACA,QAAMG,MAAM,GAAG,OAAO;AAAEC,IAAAA,IAAF;AAAQT,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBS,IAAAA;AAAzB,GAAP,KAA4C;AACvD,QAAI;AAAA,oBAGI,MAAMtB,QAAQ,CAAC;AAAEqB,QAAAA,IAAF;AAAQT,QAAAA,KAAR;AAAeC,QAAAA,QAAf;AAAyBS,QAAAA;AAAzB,OAAD,CAHlB;AAAA,+BAEIR,IAFJ;AAAA,YAEYC,WAFZ,cAEYA,WAFZ;AAAA,YAEyBP,IAFzB,cAEyBA,IAFzB;;AAIAC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;;AACA,UAAIQ,WAAJ,EAAiB;AACbL,QAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACH;AACJ,KATD,CASE,OAAOC,KAAP,EAAc;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH;AACJ,GAbD,CAtBuC,CAoCvC;AAEA;;;AACA,SACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAAEX,MAAAA,eAAF;AAAmBC,MAAAA,kBAAnB;AAAuCI,MAAAA,MAAvC;AAA+CH,MAAAA,IAA/C;AAAqDY,MAAAA;AAArD,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKf,QAHL,CADJ;AAOH,C,CAED;;AACA,OAAO,SAASkB,OAAT,GAAmB;AACtB,QAAMC,OAAO,GAAG1B,UAAU,CAACI,WAAD,CAA1B;AACA,SAAOsB,OAAP;AACH","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { login, register } from \"../../http\";\nimport { useHistory } from \"react-router-dom\";\n\n// 1) Creamos el contexto\nconst AuthContext = React.createContext();\n\n// 2) Creamos el custom Provider\nexport function AuthProvider({ children }) {\n    // 2.1) Creamos Estados\n    const [isAuthenticated, setIsAuthenticated] = useState(true);\n    const [user, setUser] = useState(null);\n    const history = useHistory();\n\n    // 2.2) Definiremos los métodos para modificar el estado\n    // Login => Cambiaré a true\n    const signIn = async ({ email, password }) => {\n        try {\n            const {\n                data: { accessToken, user }\n            } = await login(email, password);\n            setUser(user);\n            setIsAuthenticated(true);\n            history.push(\"/\");\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    // Register => Cambiaré a true\n    const signUp = async ({ name, email, password, phone }) => {\n        try {\n            const {\n                data: { accessToken, user }\n            } = await register({ name, email, password, phone });\n            setUser(user);\n            setIsAuthenticated(true);\n            if (accessToken) {\n                history.push(\"/\");\n            }\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n    // Logout => Cambiaré a false\n\n    // 2.3) Devolvemos el Context\n    return (\n        <AuthContext.Provider\n            value={{ isAuthenticated, setIsAuthenticated, signIn, user, signUp }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n}\n\n// 3) Crear el custom hook\nexport function useAuth() {\n    const context = useContext(AuthContext);\n    return context;\n}\n"]},"metadata":{},"sourceType":"module"}