{"ast":null,"code":"import _slicedToArray from \"/home/hab14/Nuva CArpeta/proyecto1/restaurant-proyect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab14/Nuva CArpeta/proyecto1/restaurant-proyect/src/shared/context/order-context.js\";\nimport React, { useState, useContext } from \"react\";\nconst OrderContext = React.createContext();\nexport function OrderProvider({\n  children\n}) {\n  const _useState = useState(JSON.parse(localStorage.getItem(\"order\")) || null),\n        _useState2 = _slicedToArray(_useState, 2),\n        order = _useState2[0],\n        setOrder = _useState2[1];\n\n  const verifyOrder = () => setOrder(JSON.parse(localStorage.getItem(\"order\")));\n\n  const addOrder = order => {\n    setOrder(localStorage.setItem(\"order\", JSON.stringify(order.id)));\n  };\n\n  const resetOrder = () => {\n    localStorage.removeItem(\"order\");\n    setOrder(null);\n  };\n\n  return React.createElement(OrderContext.Provider, {\n    value: {\n      order,\n      addOrder,\n      resetOrder,\n      verifyOrder\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, children);\n}\nexport function useOrder() {\n  const context = useContext(OrderContext);\n  return context;\n}","map":{"version":3,"sources":["/home/hab14/Nuva CArpeta/proyecto1/restaurant-proyect/src/shared/context/order-context.js"],"names":["React","useState","useContext","OrderContext","createContext","OrderProvider","children","JSON","parse","localStorage","getItem","order","setOrder","verifyOrder","addOrder","setItem","stringify","id","resetOrder","removeItem","useOrder","context"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,MAAMC,YAAY,GAAGH,KAAK,CAACI,aAAN,EAArB;AAEA,OAAO,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAAA,oBACdL,QAAQ,CAC9BM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,IADf,CADM;AAAA;AAAA,QACjCC,KADiC;AAAA,QAC1BC,QAD0B;;AAKxC,QAAMC,WAAW,GAAG,MAAMD,QAAQ,CAACL,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAD,CAAlC;;AAEA,QAAMI,QAAQ,GAAIH,KAAD,IAAW;AAAEC,IAAAA,QAAQ,CAACH,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACS,SAAL,CAAeL,KAAK,CAACM,EAArB,CAA9B,CAAD,CAAR;AAAmE,GAAjG;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBT,IAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACAP,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAHD;;AAKA,SACI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHD,MAAAA,KADG;AAEHG,MAAAA,QAFG;AAGHI,MAAAA,UAHG;AAIHL,MAAAA;AAJG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKP,QARL,CADJ;AAYH;AAED,OAAO,SAASc,QAAT,GAAoB;AACvB,QAAMC,OAAO,GAAGnB,UAAU,CAACC,YAAD,CAA1B;AACA,SAAOkB,OAAP;AACH","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nconst OrderContext = React.createContext();\n\nexport function OrderProvider({ children }) {\n    const [order, setOrder] = useState(\n        JSON.parse(localStorage.getItem(\"order\")) || null\n    );\n\n    const verifyOrder = () => setOrder(JSON.parse(localStorage.getItem(\"order\")));\n\n    const addOrder = (order) => { setOrder(localStorage.setItem(\"order\", JSON.stringify(order.id))) }\n\n\n\n    const resetOrder = () => {\n        localStorage.removeItem(\"order\");\n        setOrder(null);\n    };\n\n    return (\n        <OrderContext.Provider\n            value={{\n                order,\n                addOrder,\n                resetOrder,\n                verifyOrder\n            }}\n        >\n            {children}\n        </OrderContext.Provider>\n    );\n}\n\nexport function useOrder() {\n    const context = useContext(OrderContext);\n    return context;\n}\n"]},"metadata":{},"sourceType":"module"}