{"ast":null,"code":"import _defineProperty from \"/home/hab14/Nuva CArpeta/proyecto1/restaurant-proyect/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/hab14/Nuva CArpeta/proyecto1/restaurant-proyect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hab14/Nuva CArpeta/proyecto1/restaurant-proyect/src/shared/context/cart-context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from \"react\";\nconst CartContext = React.createContext();\nexport function CartProvider({\n  children\n}) {\n  const _useState = useState(JSON.parse(localStorage.getItem(\"cart\")) || []),\n        _useState2 = _slicedToArray(_useState, 2),\n        cart = _useState2[0],\n        setCart = _useState2[1];\n\n  const addItemToCart = cartItem => {\n    let updatedCart = null;\n\n    if (cart.find(item => item.id === cartItem.id)) {\n      updatedCart = cart.map(item => {\n        if (item.id === cartItem.id) {\n          item.quantity++;\n        }\n\n        return item;\n      });\n    } else {\n      updatedCart = [_objectSpread({}, cartItem, {\n        quantity: 1\n      }), ...cart];\n    }\n\n    setCart(updatedCart);\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n  };\n\n  const removeItemFromCart = cartItem => {\n    let updatedCart = null;\n\n    if (cartItem.quantity > 1) {\n      updatedCart = cart.map(item => {\n        if (cartItem.id === item.id) {\n          item.quantity--;\n        }\n\n        return item;\n      });\n    } else {\n      updatedCart = cart.filter(item => cartItem.id !== item.id);\n    }\n\n    setCart(updatedCart);\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n  };\n\n  const removeItem = id => {\n    const updatedCart = cart.filter(cartItem => cartItem.id !== id);\n    setCart(updatedCart);\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n  };\n\n  const totalItems = cart.reduce((acc, item) => acc + item.quantity, 0);\n  const totalPrice = cart.reduce((acc, item) => acc + item.quantity * parseInt(item.price, 0), 0);\n\n  const resetCart = () => {\n    localStorage.removeItem(\"cart\");\n    setCart([]);\n  };\n\n  return React.createElement(CartContext.Provider, {\n    value: {\n      cart,\n      addItemToCart,\n      removeItemFromCart,\n      removeItem,\n      totalItems,\n      totalPrice,\n      resetCart\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, children);\n}\nexport function useCart() {\n  const context = useContext(CartContext);\n  return context;\n}","map":{"version":3,"sources":["/home/hab14/Nuva CArpeta/proyecto1/restaurant-proyect/src/shared/context/cart-context.js"],"names":["React","useState","useContext","CartContext","createContext","CartProvider","children","JSON","parse","localStorage","getItem","cart","setCart","addItemToCart","cartItem","updatedCart","find","item","id","map","quantity","setItem","stringify","removeItemFromCart","filter","removeItem","totalItems","reduce","acc","totalPrice","parseInt","price","resetCart","useCart","context"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nconst CartContext = React.createContext();\n\nexport function CartProvider({ children }) {\n    const [cart, setCart] = useState(\n        JSON.parse(localStorage.getItem(\"cart\")) || []\n    );\n\n    const addItemToCart = cartItem => {\n        let updatedCart = null;\n\n        if (cart.find(item => item.id === cartItem.id)) {\n            updatedCart = cart.map(item => {\n                if (item.id === cartItem.id) {\n                    item.quantity++;\n                }\n                return item;\n            });\n        } else {\n            updatedCart = [{ ...cartItem, quantity: 1 }, ...cart];\n        }\n\n        setCart(updatedCart);\n        localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    };\n\n    const removeItemFromCart = cartItem => {\n        let updatedCart = null;\n\n        if (cartItem.quantity > 1) {\n            updatedCart = cart.map(item => {\n                if (cartItem.id === item.id) {\n                    item.quantity--;\n                }\n                return item;\n            });\n        } else {\n            updatedCart = cart.filter(item => cartItem.id !== item.id);\n        }\n\n        setCart(updatedCart);\n        localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    };\n\n    const removeItem = id => {\n        const updatedCart = cart.filter(cartItem => cartItem.id !== id);\n        setCart(updatedCart);\n        localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    };\n\n    const totalItems = cart.reduce((acc, item) => acc + item.quantity, 0);\n\n    const totalPrice = cart.reduce(\n        (acc, item) => acc + item.quantity * parseInt(item.price, 0),\n        0\n    );\n\n    const resetCart = () => {\n        localStorage.removeItem(\"cart\");\n        setCart([]);\n    };\n\n    return (\n        <CartContext.Provider\n            value={{\n                cart,\n                addItemToCart,\n                removeItemFromCart,\n                removeItem,\n                totalItems,\n                totalPrice,\n                resetCart\n            }}\n        >\n            {children}\n        </CartContext.Provider>\n    );\n}\n\nexport function useCart() {\n    const context = useContext(CartContext);\n    return context;\n}\n"]},"metadata":{},"sourceType":"module"}