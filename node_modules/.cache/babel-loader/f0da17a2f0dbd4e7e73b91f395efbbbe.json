{"ast":null,"code":"var _jsxFileName = \"/home/hab14/proyecto1/restaurant-proyect/src/routes/Registro.js\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport useForm from \"react-hook-form\";\nimport { useAuth } from \"../shared/context/auth-context\";\nimport \"../css/registro.css\";\nexport function Registro() {\n  const _useAuth = useAuth(),\n        signUp = _useAuth.signUp;\n\n  const _useForm = useForm({\n    mode: \"onBlur\"\n  }),\n        register = _useForm.register,\n        errors = _useForm.errors,\n        formState = _useForm.formState,\n        handleSubmit = _useForm.handleSubmit,\n        setError = _useForm.setError;\n\n  const getColor = name => {\n    return errors[name] ? \"ko\" : formState.touched.includes(name) && \"ok\";\n  };\n\n  const handleSignUp = formData => {\n    return signUp(formData).catch(error => {\n      if (error.response.status === 409) {\n        setError(\"email\", \"conflict\", \"The email already exists. Please try again\");\n      }\n    });\n  };\n\n  return React.createElement(\"main\", {\n    className: \"registro reg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Introduce tus datos\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit(handleSignUp),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    className: \"form-control \".concat(getColor(\"name\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    className: \"registro\",\n    ref: register({\n      required: \"The name is required\"\n    }),\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Enter your name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, errors.name && errors.name.message)), React.createElement(\"fieldset\", {\n    className: \"form-control \".concat(getColor(\"email\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    className: \"registro\",\n    ref: register({\n      required: \"The email is required\",\n      pattern: {\n        message: \"The email is not valid\",\n        value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      }\n    }),\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    placeholder: \"Enter your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, errors.email && errors.email.message)), React.createElement(\"fieldset\", {\n    className: \"form-control \".concat(getColor(\"password\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"registro\",\n    ref: register({\n      required: \"The password should be in place\",\n      minLength: {\n        message: \"Password length should be greater than 6\",\n        value: 6\n      }\n    }),\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Enter your password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, errors.password && errors.password.message)), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    disabled: formState.isSubmitting || errors.email || errors.password || formState.touched.length < 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Link, {\n    to: \"/login\",\n    className: \"registro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Ya tengo cuenta\")));\n}","map":{"version":3,"sources":["/home/hab14/proyecto1/restaurant-proyect/src/routes/Registro.js"],"names":["React","Link","useForm","useAuth","Registro","signUp","mode","register","errors","formState","handleSubmit","setError","getColor","name","touched","includes","handleSignUp","formData","catch","error","response","status","required","message","pattern","value","email","minLength","password","isSubmitting","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport useForm from \"react-hook-form\";\n\nimport { useAuth } from \"../shared/context/auth-context\"\n\nimport \"../css/registro.css\"\n\nexport function Registro() {\n    const { signUp } = useAuth();\n    const { register, errors, formState, handleSubmit, setError } = useForm({\n        mode: \"onBlur\"\n    });\n    const getColor = name => {\n        return errors[name] ? \"ko\" : formState.touched.includes(name) && \"ok\";\n    };\n\n    const handleSignUp = formData => {\n        return signUp(formData).catch(error => {\n            if (error.response.status === 409) {\n                setError(\n                    \"email\",\n                    \"conflict\",\n                    \"The email already exists. Please try again\"\n                );\n            }\n        });\n    };\n    return (\n        <main className=\"registro reg\" >\n            <h3>Introduce tus datos</h3>\n            <form onSubmit={handleSubmit(handleSignUp)}>\n                <fieldset className={`form-control ${getColor(\"name\")}`}>\n                    <label>Name</label>\n                    <input className=\"registro\"\n                        ref={register({\n                            required: \"The name is required\"\n                        })}\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Enter your name\"\n                    />\n                    <span className=\"errorMessage\">\n                        {errors.name && errors.name.message}\n                    </span>\n                </fieldset>\n                <fieldset className={`form-control ${getColor(\"email\")}`}>\n                    <label>Email</label>\n                    <input className=\"registro\"\n                        ref={register({\n                            required: \"The email is required\",\n                            pattern: {\n                                message: \"The email is not valid\",\n                                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                            }\n                        })}\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"text\"\n                        placeholder=\"Enter your email\"\n                    />\n                    <span className=\"errorMessage\">\n                        {errors.email && errors.email.message}\n                    </span>\n                </fieldset>\n                <fieldset className={`form-control ${getColor(\"password\")}`}>\n                    <label>Password</label>\n                    <input className=\"registro\"\n                        ref={register({\n                            required: \"The password should be in place\",\n                            minLength: {\n                                message: \"Password length should be greater than 6\",\n                                value: 6\n                            }\n                        })}\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Enter your password\"\n                    />\n                    <span className=\"errorMessage\">\n                        {errors.password && errors.password.message}\n                    </span>\n                </fieldset>\n                <button\n                    type=\"submit\"\n                    className=\"btn\"\n                    disabled={formState.isSubmitting || errors.email || errors.password || formState.touched.length < 3}\n                >\n                    Submit\n                        </button>\n                <Link to=\"/login\" className=\"registro\">Ya tengo cuenta</Link>\n            </form>\n        </main>\n    );\n}"]},"metadata":{},"sourceType":"module"}